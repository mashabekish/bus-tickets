// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bus_tickets;

#nullable disable

namespace bus_tickets.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("bus_tickets.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<TimeOnly>("ArrivalTime")
                        .HasColumnType("time(0)")
                        .HasColumnName("arrivalTime");

                    b.Property<string>("BusType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("busType");

                    b.Property<double>("Cost")
                        .HasColumnType("double(10,2) unsigned")
                        .HasColumnName("cost");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<TimeOnly>("DeparturesTime")
                        .HasColumnType("time(0)")
                        .HasColumnName("departuresTime");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("destination");

                    b.Property<uint>("Left")
                        .HasColumnType("int unsigned")
                        .HasColumnName("left");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("number");

                    b.Property<uint>("Sold")
                        .HasColumnType("int unsigned")
                        .HasColumnName("sold");

                    b.HasKey("Id");

                    b.ToTable("flights");
                });

            modelBuilder.Entity("bus_tickets.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<double>("Cost")
                        .HasColumnType("double(10,2) unsigned")
                        .HasColumnName("cost");

                    b.Property<uint>("Count")
                        .HasColumnType("int unsigned")
                        .HasColumnName("count");

                    b.Property<int>("FlightId")
                        .HasColumnType("int")
                        .HasColumnName("flightId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.HasIndex("UserId");

                    b.ToTable("tickets");
                });

            modelBuilder.Entity("bus_tickets.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isActive");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isAdmin");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsAdmin = true,
                            Login = "admin",
                            Password = "$2a$11$aXJvnMfl8ZOMDmV.blRHR.zJ4xQAUb0fa1jN5XE/KwqfR.xSjFp0y"
                        });
                });

            modelBuilder.Entity("bus_tickets.Models.Ticket", b =>
                {
                    b.HasOne("bus_tickets.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bus_tickets.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
